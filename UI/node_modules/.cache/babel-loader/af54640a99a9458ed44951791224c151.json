{"ast":null,"code":"var _jsxFileName = \"/Users/smitvachhani/Desktop/scenestamp/Scene-Stamp/src/Watch.js\";\nimport React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      renderCategories: false\n    };\n  }\n\n  handleVideoLoad(e) {\n    let files = e.target.files;\n\n    if (files.length === 1) {\n      let file = files[0];\n      console.log(files);\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watch-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"videoFile\",\n      className: \"watch-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      name: \"video\",\n      multiple: \"false\",\n      onChange: e => {\n        this.handleVideoLoad(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Player, {\n      ref: \"player\",\n      src: this.state.videoFileURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/smitvachhani/Desktop/scenestamp/Scene-Stamp/src/Watch.js"],"names":["React","Player","ControlBar","Watch","Component","constructor","handleVideoLoad","bind","state","videoFileURL","videoFileObject","renderCategories","e","files","target","length","file","console","log","setState","URL","createObjectURL","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,aAAnC;AACA,OAAO,aAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,gBAAgB,EAAE;AAHP,KAAb;AAKD;;AACDL,EAAAA,eAAe,CAACM,CAAD,EAAI;AACjB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;;AACA,QAAIA,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACtB,UAAIC,IAAI,GAAGH,KAAK,CAAC,CAAD,CAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,WAAKM,QAAL,CAAc;AACZV,QAAAA,YAAY,EAAEW,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CADF;AAEZN,QAAAA,eAAe,EAAEM;AAFL,OAAd;AAID;AACF;;AACDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAC,OAHX;AAIE,MAAA,QAAQ,EAAEV,CAAC,IAAI;AACb,aAAKN,eAAL,CAAqBM,CAArB;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD;;AArCgD","sourcesContent":["import React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\n\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      renderCategories: false\n    };\n  }\n  handleVideoLoad(e) {\n    let files = e.target.files;\n    if (files.length === 1) {\n      let file = files[0];\n      console.log(files);\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"watch-container\">\n        <form id=\"videoFile\" className=\"watch-control\">\n          <input\n            type=\"file\"\n            name=\"video\"\n            multiple=\"false\"\n            onChange={e => {\n              this.handleVideoLoad(e);\n            }}\n          />\n        </form>\n        <Player ref=\"player\" src={this.state.videoFileURL} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}