{"ast":null,"code":"var _jsxFileName = \"/Users/smitvachhani/Desktop/scenestamp/Scene-Stamp/src/Watch.js\";\nimport React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\nimport Scene from \"./Scene\";\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      videoName: \"\",\n      renderQueryData: false,\n      seriesOptions: [\"Select Series\", \"+ Create New Series\"],\n      episodeOptions: [\"Select Episode\", \"Create New Episode\"]\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"test\");\n    this.queryForData();\n  }\n\n  handleVideoLoad(e) {\n    let files = e.target.files;\n\n    if (files.length === 1) {\n      let file = files[0];\n      console.log(file.name.substring(0, file.name.length - 4));\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file,\n        videoName: file.name\n      });\n      this.queryForData(this.state.videoName);\n    }\n  }\n\n  queryForData() {\n    fetch(\"https://scene-stamp-server.herokuapp.com/getSeriesData\").then(response => response.json()).then(data => this.setState({\n      seriesOptions: data\n    })).then(this.prependAppendData());\n  }\n\n  prependAppendData() {\n    const data = [{\n      series_name: \"Select Series\"\n    }, {\n      series_name: \"Create New Series\"\n    }];\n    let temp = this.state.seriesOptions;\n    temp.unshift(data);\n    this.setState({\n      seriesOptions: temp\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watch-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"watch-elements-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.seriesOptions.map(element => React.createElement(\"option\", {\n      className: \"watch-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, element.series_name))), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.seriesOptions.map(element => React.createElement(\"option\", {\n      className: \"watch-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, element)))), React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Player, {\n      ref: \"player\",\n      src: this.state.videoFileURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"watch-scenes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Scene, {\n      episode: \"Episode 5 Season 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Scene, {\n      episode: \"Epside 1 Season 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/smitvachhani/Desktop/scenestamp/Scene-Stamp/src/Watch.js"],"names":["React","Player","ControlBar","Scene","Watch","Component","constructor","handleVideoLoad","bind","state","videoFileURL","videoFileObject","videoName","renderQueryData","seriesOptions","episodeOptions","componentDidMount","console","log","queryForData","e","files","target","length","file","name","substring","setState","URL","createObjectURL","fetch","then","response","json","data","prependAppendData","series_name","temp","unshift","render","map","element"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\nimport Scene from \"./Scene\";\n\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      videoName: \"\",\n      renderQueryData: false,\n      seriesOptions: [\"Select Series\", \"+ Create New Series\"],\n      episodeOptions: [\"Select Episode\", \"Create New Episode\"]\n    };\n  }\n  componentDidMount() {\n    console.log(\"test\");\n    this.queryForData();\n  }\n  handleVideoLoad(e) {\n    let files = e.target.files;\n    if (files.length === 1) {\n      let file = files[0];\n      console.log(file.name.substring(0, file.name.length - 4));\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file,\n        videoName: file.name\n      });\n      this.queryForData(this.state.videoName);\n    }\n  }\n  queryForData() {\n    fetch(\"https://scene-stamp-server.herokuapp.com/getSeriesData\")\n      .then(response => response.json())\n      .then(data => this.setState({ seriesOptions: data }))\n      .then(this.prependAppendData());\n  }\n  prependAppendData() {\n    const data = [\n      { series_name: \"Select Series\" },\n      { series_name: \"Create New Series\" }\n    ];\n    let temp = this.state.seriesOptions;\n    temp.unshift(data);\n    this.setState({ seriesOptions: temp });\n  }\n  render() {\n    return (\n      <div className=\"watch-container\">\n        <div className=\"watch-elements-container\">\n          <select>\n            {this.state.seriesOptions.map(element => (\n              <option className=\"watch-element\">{element.series_name}</option>\n            ))}\n          </select>\n          <select>\n            {this.state.seriesOptions.map(element => (\n              <option className=\"watch-element\">{element}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"video\">\n          <Player ref=\"player\" src={this.state.videoFileURL} />\n        </div>\n        <div className=\"watch-scenes\">\n          <Scene episode=\"Episode 5 Season 1\" />\n          <Scene episode=\"Epside 1 Season 3\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}