{"ast":null,"code":"var _jsxFileName = \"/Users/svachhan/Desktop/workspace/Scene-Stamp/UI/src/Watch.js\";\nimport React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\nimport Scene from \"./Scene\";\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmitSeries = this.handleSubmitSeries.bind(this);\n    this.handleSubmitEpisode = this.handleSubmitEpisode.bind(this);\n    this.handleEpisodeSelect = this.handleEpisodeSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      videoName: \"\",\n      renderQueryData: false,\n      seriesOptions: [{\n        series_name: \"Select Series\"\n      }],\n      episodeOptions: [{\n        episode_name: \"Select Episode\"\n      }],\n      modalOpen: false,\n      seriesFlag: true,\n      currSeriesId: -1,\n      episode_num: \"\",\n      episode_name: \"\",\n      series_name: \"\",\n      air_date: \"\",\n      season_num: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.queryForSeries();\n  }\n\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  handleVideoLoad(e) {\n    let files = e.target.files;\n\n    if (files.length === 1) {\n      let file = files[0];\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file,\n        videoName: file.name\n      });\n    }\n  }\n\n  handleOnSelect(e) {\n    if (e.target.value == \"Create New Series\") {\n      this.displayModal(e.target.value);\n    } else {\n      const data = this.state.seriesOptions;\n\n      for (var elem in data) {\n        if (data[elem].series_name == e.target.value) {\n          this.setState({\n            currSeriesId: data[elem].series_id\n          });\n          this.queryForEpisodes(data[elem].series_id);\n          break;\n        }\n      }\n    }\n  }\n\n  handleClose() {\n    this.setState({\n      modalOpen: false\n    });\n  }\n\n  handleEpisodeSelect(e) {\n    if (e.target.value == \"Create New Episode\") {\n      this.displayModal(e.target.value);\n    }\n  }\n\n  handleSubmitSeries() {\n    let seriesData = this.state.seriesOptions;\n    fetch(\"https://scene-stamp-server.herokuapp.com/newSeries?series_name=\" + this.state.series_name).then(res => res.json()).then(data => seriesData.push(data)).then(data => this.setState({\n      seriesOptions: seriesData,\n      modalOpen: false,\n      seriesName: \"\"\n    })).catch(err => console.log(err));\n  }\n\n  handleSubmitEpisode() {\n    let episodeData = this.state.episodeOptions;\n    let currQuery = this.state.episode_name;\n\n    if (this.state.episode_num.length != \"\") {\n      currQuery += \"&episode=\" + this.state.episode_num;\n    }\n\n    if (this.state.season_num.length != \"\") {\n      currQuery += \"&season=\" + this.state.season_num;\n    }\n\n    if (this.state.air_date.length != \"\") {\n      currQuery += \"&episode=\" + this.state.air_date;\n    }\n\n    fetch(\"https://scene-stamp-server.herokuapp.com/newEpisode?series_id=\" + this.state.currSeriesId + \"&episode_name=\" + this.state.series_name + currQuery).then(res => res.json()).then(data => episodeData.push(data)).then(data => this.setState({\n      episodeOptions: episodeData,\n      modalOpen: false,\n      episode_num: \"\",\n      season_num: \"\",\n      episode_name: \"\",\n      air_date: \"\"\n    })).catch(err => console.log(err));\n  }\n\n  displayModal(type) {\n    console.log(\"hello\");\n\n    if (type == \"Create New Series\") {\n      this.setState({\n        modalOpen: true,\n        seriesFlag: true\n      });\n    } else {\n      this.setState({\n        modalOpen: true,\n        seriesFlag: false\n      });\n    }\n  }\n\n  queryForSeries() {\n    fetch(\"https://scene-stamp-server.herokuapp.com/getSeriesData\").then(response => response.json()).then(data => this.prependAppendSeries(data));\n  }\n\n  queryForEpisodes(id) {\n    fetch(\"https://scene-stamp-server.herokuapp.com/getEpisodeDataFromSeries?series_ids=\" + id).then(response => response.json()).then(data => this.prependAppendEpisodes(data));\n  }\n\n  prependAppendEpisodes(data) {\n    data.unshift({\n      episode_name: \"Create New Episode\"\n    });\n    data.unshift({\n      episode_name: \"Select Episode\"\n    });\n    this.setState({\n      episodeOptions: data\n    });\n  }\n\n  prependAppendSeries(data) {\n    data.unshift({\n      series_name: \"Create New Series\"\n    });\n    data.unshift({\n      series_name: \"Select Series\"\n    });\n    this.setState({\n      seriesOptions: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watch-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.modalOpen ? React.createElement(\"div\", {\n      className: \"watch-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.seriesFlag ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"series_name\",\n      placeholder: \"Enter Series Name..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watch-modal-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"watch-series-submit\",\n      onClick: this.handleSubmitSeries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Submit\")))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      className: \"watch-modal-episodes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"episode_name\",\n      placeholder: \"Enter Episode Name..*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"episode_num\",\n      placeholder: \"Enter Episode Number..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"season_num\",\n      placeholder: \"Enter Season Number..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"air_date\",\n      placeholder: \"Enter Air Date..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"watch-modal-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"watch-series-submit\",\n      onClick: this.handleSubmitEpisode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Submit\")))))) : null, React.createElement(\"div\", {\n      className: \"watch-elements-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleOnSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.state.seriesOptions.map(element => React.createElement(\"option\", {\n      className: \"watch-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, element.series_name))), React.createElement(\"select\", {\n      onChange: this.handleEpisodeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.state.episodeOptions.map(element => React.createElement(\"option\", {\n      className: \"watch-element\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, element.episode_name)))), React.createElement(\"div\", {\n      className: \"video\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Player, {\n      ref: \"player\",\n      src: this.state.videoFileURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"watch-scenes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(Scene, {\n      episode: \"Episode 5 Season 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Scene, {\n      episode: \"Epside 1 Season 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/svachhan/Desktop/workspace/Scene-Stamp/UI/src/Watch.js"],"names":["React","Player","ControlBar","Scene","Watch","Component","constructor","handleVideoLoad","bind","handleOnSelect","handleClose","handleSubmitSeries","handleSubmitEpisode","handleEpisodeSelect","handleChange","state","videoFileURL","videoFileObject","videoName","renderQueryData","seriesOptions","series_name","episodeOptions","episode_name","modalOpen","seriesFlag","currSeriesId","episode_num","air_date","season_num","componentDidMount","queryForSeries","evt","setState","target","name","value","e","files","length","file","URL","createObjectURL","displayModal","data","elem","series_id","queryForEpisodes","seriesData","fetch","then","res","json","push","seriesName","catch","err","console","log","episodeData","currQuery","type","response","prependAppendSeries","id","prependAppendEpisodes","unshift","render","map","element"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Player, ControlBar } from \"video-react\";\nimport \"./Watch.css\";\nimport Scene from \"./Scene\";\n\nexport default class Watch extends React.Component {\n  constructor() {\n    super();\n    this.handleVideoLoad = this.handleVideoLoad.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmitSeries = this.handleSubmitSeries.bind(this);\n    this.handleSubmitEpisode = this.handleSubmitEpisode.bind(this);\n    this.handleEpisodeSelect = this.handleEpisodeSelect.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      videoFileURL: \"\",\n      videoFileObject: \"\",\n      videoName: \"\",\n      renderQueryData: false,\n      seriesOptions: [{ series_name: \"Select Series\" }],\n      episodeOptions: [{ episode_name: \"Select Episode\" }],\n      modalOpen: false,\n      seriesFlag: true,\n      currSeriesId: -1,\n      episode_num: \"\",\n      episode_name: \"\",\n      series_name: \"\",\n      air_date: \"\",\n      season_num: \"\"\n    };\n  }\n  componentDidMount() {\n    this.queryForSeries();\n  }\n  handleChange(evt) {\n    // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n    // and use it to target the key on our `state` object with the same name, using bracket syntax\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n  handleVideoLoad(e) {\n    let files = e.target.files;\n    if (files.length === 1) {\n      let file = files[0];\n      this.setState({\n        videoFileURL: URL.createObjectURL(file),\n        videoFileObject: file,\n        videoName: file.name\n      });\n    }\n  }\n  handleOnSelect(e) {\n    if (e.target.value == \"Create New Series\") {\n      this.displayModal(e.target.value);\n    } else {\n      const data = this.state.seriesOptions;\n      for (var elem in data) {\n        if (data[elem].series_name == e.target.value) {\n          this.setState({ currSeriesId: data[elem].series_id });\n          this.queryForEpisodes(data[elem].series_id);\n          break;\n        }\n      }\n    }\n  }\n  handleClose() {\n    this.setState({ modalOpen: false });\n  }\n  handleEpisodeSelect(e) {\n    if (e.target.value == \"Create New Episode\") {\n      this.displayModal(e.target.value);\n    }\n  }\n  handleSubmitSeries() {\n    let seriesData = this.state.seriesOptions;\n    fetch(\n      \"https://scene-stamp-server.herokuapp.com/newSeries?series_name=\" +\n        this.state.series_name\n    )\n      .then(res => res.json())\n      .then(data => seriesData.push(data))\n      .then(data =>\n        this.setState({\n          seriesOptions: seriesData,\n          modalOpen: false,\n          seriesName: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  }\n  handleSubmitEpisode() {\n    let episodeData = this.state.episodeOptions;\n    let currQuery = this.state.episode_name;\n    if (this.state.episode_num.length != \"\") {\n      currQuery += \"&episode=\" + this.state.episode_num;\n    }\n    if (this.state.season_num.length != \"\") {\n      currQuery += \"&season=\" + this.state.season_num;\n    }\n    if (this.state.air_date.length != \"\") {\n      currQuery += \"&episode=\" + this.state.air_date;\n    }\n    fetch(\n      \"https://scene-stamp-server.herokuapp.com/newEpisode?series_id=\" +\n        this.state.currSeriesId +\n        \"&episode_name=\" +\n        this.state.series_name +\n        currQuery\n    )\n      .then(res => res.json())\n      .then(data => episodeData.push(data))\n      .then(data =>\n        this.setState({\n          episodeOptions: episodeData,\n          modalOpen: false,\n          episode_num: \"\",\n          season_num: \"\",\n          episode_name: \"\",\n          air_date: \"\"\n        })\n      )\n      .catch(err => console.log(err));\n  }\n  displayModal(type) {\n    console.log(\"hello\");\n    if (type == \"Create New Series\") {\n      this.setState({ modalOpen: true, seriesFlag: true });\n    } else {\n      this.setState({ modalOpen: true, seriesFlag: false });\n    }\n  }\n  queryForSeries() {\n    fetch(\"https://scene-stamp-server.herokuapp.com/getSeriesData\")\n      .then(response => response.json())\n      .then(data => this.prependAppendSeries(data));\n  }\n  queryForEpisodes(id) {\n    fetch(\n      \"https://scene-stamp-server.herokuapp.com/getEpisodeDataFromSeries?series_ids=\" +\n        id\n    )\n      .then(response => response.json())\n      .then(data => this.prependAppendEpisodes(data));\n  }\n\n  prependAppendEpisodes(data) {\n    data.unshift({ episode_name: \"Create New Episode\" });\n    data.unshift({ episode_name: \"Select Episode\" });\n    this.setState({ episodeOptions: data });\n  }\n\n  prependAppendSeries(data) {\n    data.unshift({ series_name: \"Create New Series\" });\n    data.unshift({ series_name: \"Select Series\" });\n    this.setState({ seriesOptions: data });\n  }\n  render() {\n    return (\n      <div className=\"watch-container\">\n        {this.state.modalOpen ? (\n          <div className=\"watch-modal\">\n            <div className=\"modal-content\">\n              {this.state.seriesFlag ? (\n                <div>\n                  <span className=\"close\" onClick={this.handleClose}>\n                    &times;\n                  </span>\n                  <div>\n                    <input\n                      onChange={this.handleChange}\n                      name=\"series_name\"\n                      placeholder=\"Enter Series Name..\"\n                    />\n                    <div className=\"watch-modal-margin\">\n                      <button\n                        className=\"watch-series-submit\"\n                        onClick={this.handleSubmitSeries}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div>\n                  <span className=\"close\" onClick={this.handleClose}>\n                    &times;\n                  </span>\n                  <div className=\"watch-modal-episodes\">\n                    <input\n                      onChange={this.handleChange}\n                      name=\"episode_name\"\n                      placeholder=\"Enter Episode Name..*\"\n                    />\n                    <input\n                      onChange={this.handleChange}\n                      name=\"episode_num\"\n                      placeholder=\"Enter Episode Number..\"\n                    />\n                    <input\n                      onChange={this.handleChange}\n                      name=\"season_num\"\n                      placeholder=\"Enter Season Number..\"\n                    />\n                    <input\n                      onChange={this.handleChange}\n                      name=\"air_date\"\n                      placeholder=\"Enter Air Date..\"\n                    />\n                    <div className=\"watch-modal-margin\">\n                      <button\n                        className=\"watch-series-submit\"\n                        onClick={this.handleSubmitEpisode}\n                      >\n                        Submit\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        ) : null}\n        <div className=\"watch-elements-container\">\n          <select onChange={this.handleOnSelect}>\n            {this.state.seriesOptions.map(element => (\n              <option className=\"watch-element\">{element.series_name}</option>\n            ))}\n          </select>\n          <select onChange={this.handleEpisodeSelect}>\n            {this.state.episodeOptions.map(element => (\n              <option className=\"watch-element\">{element.episode_name}</option>\n            ))}\n          </select>\n        </div>\n        <div className=\"video\">\n          <Player ref=\"player\" src={this.state.videoFileURL} />\n        </div>\n        <div className=\"watch-scenes\">\n          <Scene episode=\"Episode 5 Season 1\" />\n          <Scene episode=\"Epside 1 Season 3\" />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}